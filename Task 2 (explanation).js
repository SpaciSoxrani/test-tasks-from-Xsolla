'use strict';
function func(s, a, b) {
  eval('') 
  let i = -1, j = -1, r = -1;
 
  if (typeof s[0] === 'undefined') {
    return s.length + i; //все равно что return i 
  }//проверка на существовании строки в принципе
 
  for (i = s.length - 1; i > -1; i--) {
    for (var x = a.length - 1; x > -1; x--) {
      if (s[i + x] !== a[x]) break; //происходит сравнение символов с конца строки
    }
    if (r === -1 && x === -1) { //когда разлия в символах подстроки и строки, то идем сюда
      r = i; // ищет подстроку а в строке s и запоминает с какой позиции
    };
  }
 
  for (j = s.length - 1; j > -1; j--) {
    let y = 0;
    while (y < b.length && b[y] === s[j + y]) {
      y++
    };
    if (y === b.length && s[j + y - 1]) {
      break; //тоже поиск подстроки b в s без запоминания номера
      }
      // данный цикл вообще не имеет места быть, так как программа выводит только результат существования подстроки а
      // 


  }
 
  if (r === -1) { // если не запомнили позицию а, то есть подстроки не существует,то возвращаем j или -1
    return j;
  } else {
    if (j === -1) { //если все таки есть подстрока а, то возвращаем позицию ее начала, если j в точности равно -1
      return r;
    } else {
      if (r - j > 0) { //j не может иметь другого значения, значит , эта ветка бессмысленна
        return r;
      } else {
        return j;
      }
    }
  }
}

